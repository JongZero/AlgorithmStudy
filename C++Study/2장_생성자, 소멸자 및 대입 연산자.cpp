/// 2장 생성자, 소멸자 및 대입 연산자
/// 항목 5 : C++가 은근슬쩍 만들어 호출해 버리는 함수들에 촉각을 세우자.
// 복사 생성자, 복사 대입 연산자, 생성자, 소멸자는 여러분이 클래스 안에 직접 선언해 넣지 않으면
// 컴파일러가 저절로 선언해 주도록 되어 있다.
// 이들은 모두 기본형이고 public이며 inline함수이다.

// 즉, 여러분이 만약 이렇게 썼다면
class Empty {};

// 다음과 같이 쓴 것과 근본적으로 똑같다는 것이다.
class Empty
{
public:
	Empty() { ... }								// 기본 생성자
	Empty(const Empty& rhs) { ... }				// 복사 생성자
	~Empty() { ... }							// 소멸자: 가상 함수 여부에 대해서는
												// 아래에서 더 자세히 설명함
	Empty& operator=(const Empty& rhs) { ... }	// 복사 대입 연산자
};
// 이들은 꼭 필요하다고 컴파일러가 판단할 때만 만들어지도록 되어 있다.
// 이들이 만들어지는 조건을 만족하는 코드는 다음과 같다.
Empty e1;			// 기본 생성자, 소멸자
Empty e2(e1);		// 복사 생성자
e2 = e1;			// 복사 대입 연산자
// 여기서 소멸자는 이 클래스가 상속한 기본 클래스의 소멸자가 가상 소멸자로 되어 있지 않으면
// 역시 비가상 소멸자로 만들어진다는 점을 꼭 알고 가자. (항목 7 참조)

// 참조자를 데이터 멤버로 갖고 있는 클래스에 대입 연산을 지원하려면 여러분이 직접 복사 대입
// 연산자를 정의해 주어야 한다.

// 이것만은 잊지 말자!
// - 컴파일러는 경우에 따라 클래스에 대해 기본 생성자, 복사 생성자, 복사 대입 연산자, 소멸자를
// 암시적으로 만들어 놓을 수 있다.